_id: 57c53025-a431-4f8c-bb85-45bcc0652575
slug: 2013-11-rtti-in-static-html
comment_id: 57c530
parent_id: e6eadb
name: Юрий
email: ''
url: 'https://www.blogger.com/profile/15910217651901175618'
date: 1384306740
message: "
Ну вот в C# (и вообще в языках для CLR) примитивные типы - частный случай типов-значений (value types),
с методами и пропертями (но без возможности наследования, ес-сно).\n
\n
Но это, конечно, не для низкого уровня.\n
\n
Если говорить о дженерик-алгоритмах, то их, строго говоря, зачастую можно сделать, имея лишь указатели на функции.
См. `qsort` в стандартной библиотеке C.\n
\n
Но параметрический полиморфизм лучше, конечно. Причём если его делать без (а) боксинга, как в Java (тормоза) и
(б) динамической генерации специализированного кода, как в .NET (ибо рантайм толстый), то остаются только макросы
(типа шаблонов в C++ и D).\n
\n
Вообще, D тут образцовый вариант, т.к. в нём можно и функции вызывать как методы (unified function call syntax, UFCS),
т.е. эмулировать методы на примитивных типах (в С# тоже можно, но с дженериками это не поможет).\n
"
