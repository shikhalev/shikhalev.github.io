[{"content":"<div class=\"comment\" id=\"a53f65\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org/\" itemprop=\"url\" content=\"https://shikhalev.org/\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#a53f65\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#a53f65\">#a53f65</a>\n      <span itemprop=\"datePublished\" content=\"2022-08-25T17:15:16+00:00\">2022.08.25 17:15</span>\n        ответ на <a href=\"#27fd2c\">#27fd2c</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Да, там очень много в этом плане поменялось, именно что касается умолчаний и «основного пути». Причем в версиях 3.x это менялось неоднократно. Пока руки не доходят полностью разобраться и написать новую статью, увы.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"a53f65\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"a53f65\">Цитировать</a></p></div></div>\n","slug":"2019-09-darktable-quickstart-html","comment_id":"a53f65","parent_id":"27fd2c"},{"content":"<div class=\"comment\" id=\"27fd2c\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://ubuntu-news.ru/\" itemprop=\"url\" content=\"https://ubuntu-news.ru/\"><span itemprop=\"name\">ram32</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#27fd2c\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#27fd2c\">#27fd2c</a>\n      <span itemprop=\"datePublished\" content=\"2022-08-19T23:47:46+00:00\">2022.08.19 23:47</span></span>\n  </h5>\n  <div class=\"comment-message\"><p>В 4 версии Darktable стандартные неотключаемые модули поменялись, судя по всему. Я вижу у себя следующие 6 штук:\nОригинал, ICC профиль ввода, ICC профиль вывода, Вывод на монитор, Резкость, Ориентация. \nДа и фильтр \"Базовая кривая\" по умолчанию не применяется.\nЗа исключением этого статья остается крайне актуальной. Спасибо за ваши старания :)</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"27fd2c\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"27fd2c\">Цитировать</a></p></div></div>\n","slug":"2019-09-darktable-quickstart-html","comment_id":"27fd2c","parent_id":""},{"content":"<div class=\"comment\" id=\"15d612\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#15d612\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#15d612\">#15d612</a>\n      <span itemprop=\"datePublished\" content=\"2022-01-10T08:25:43+00:00\">2022.01.10 08:25</span>\n        ответ на <a href=\"#1343b\">#1343b</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Спасибо за отзыв.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"15d612\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"15d612\">Цитировать</a></p></div></div>\n","slug":"2021-03-typo-keyboard-html","comment_id":"15d612","parent_id":"1343b"},{"content":"<div class=\"comment\" id=\"1343b\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"http://dezigner.tilda.ws/\" itemprop=\"url\" content=\"http://dezigner.tilda.ws/\"><span itemprop=\"name\">Юрий</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#1343b\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#1343b\">#1343b</a>\n      <span itemprop=\"datePublished\" content=\"2022-01-04T14:04:01+00:00\">2022.01.04 14:04</span></span>\n  </h5>\n  <div class=\"comment-message\"><p>Большое спасибо за этот труд.\nСохранил себе в заметки. Знаю, что вернусь сюда еще много и много раз.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"1343b\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"1343b\">Цитировать</a></p></div></div>\n","slug":"2021-03-typo-keyboard-html","comment_id":"1343b","parent_id":""},{"content":"<div class=\"comment\" id=\"7b563f\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#7b563f\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#7b563f\">#7b563f</a>\n      <span itemprop=\"datePublished\" content=\"2021-04-09T07:23:31+00:00\">2021.04.09 07:23</span>\n        ответ на <a href=\"#616609\">#616609</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Переформулировал, добавил цитату в сноске.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"7b563f\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"7b563f\">Цитировать</a></p></div></div>\n","slug":"2021-04-rms-html","comment_id":"7b563f","parent_id":"616609"},{"content":"<div class=\"comment\" id=\"616609\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#616609\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#616609\">#616609</a>\n      <span itemprop=\"datePublished\" content=\"2021-04-09T03:13:55+00:00\">2021.04.09 03:13</span>\n        ответ на <a href=\"#5d1d3e\">#5d1d3e</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Но в общем да, первого не предполагал (да и этот вариант на тот момент не мог рассматриваться). Подумаю, как корректно переформулировать.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"616609\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"616609\">Цитировать</a></p></div></div>\n","slug":"2021-04-rms-html","comment_id":"616609","parent_id":"5d1d3e"},{"content":"<div class=\"comment\" id=\"fe5afd\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#fe5afd\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#fe5afd\">#fe5afd</a>\n      <span itemprop=\"datePublished\" content=\"2021-04-09T03:10:42+00:00\">2021.04.09 03:10</span>\n        ответ на <a href=\"#5d1d3e\">#5d1d3e</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Я исхожу вот из этой цитаты:</p>\n\n<blockquote>\n  <p>We can imagine many scenarios, but the most plausible scenario is that\nshe presented herself to him as entirely willing. Assuming she was\nbeing coerced by Epstein, he would have had every reason to tell her\nto conceal that from most of his associates.</p>\n</blockquote>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"fe5afd\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"fe5afd\">Цитировать</a></p></div></div>\n","slug":"2021-04-rms-html","comment_id":"fe5afd","parent_id":"5d1d3e"},{"content":"<div class=\"comment\" id=\"5d1d3e\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><span itemprop=\"name\">Алексей</span></span>\n    <span class=\"comment-meta\">\n      <a href=\"#5d1d3e\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#5d1d3e\">#5d1d3e</a>\n      <span itemprop=\"datePublished\" content=\"2021-04-08T08:33:22+00:00\">2021.04.08 08:33</span></span>\n  </h5>\n  <div class=\"comment-message\"><blockquote>\n  <p>предполагает, что девушка, предложенная Мински Эпштейном10, шла «на дело» добровольно, или, по крайней мере, это так выглядело со стороны Мински.</p>\n</blockquote>\n\n<p>Первого он не предполагал — это SJW переврала. См., например, <a href=\"https://ru.wikipedia.org/w/index.php?title=%D0%A1%D1%82%D0%BE%D0%BB%D0%BB%D0%BC%D0%B0%D0%BD,_%D0%A0%D0%B8%D1%87%D0%B0%D1%80%D0%B4_%D0%9C%D1%8D%D1%82%D1%82%D1%8C%D1%8E&amp;oldid=113323033\">ru.wikipedia.org/…</a> и <a href=\"https://www.wetheweb.org/post/cancel-we-the-web\">www.wetheweb.org/…</a></p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"5d1d3e\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"5d1d3e\">Цитировать</a></p></div></div>\n","slug":"2021-04-rms-html","comment_id":"5d1d3e","parent_id":""},{"content":"<div class=\"comment\" id=\"312424\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#312424\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#312424\">#312424</a>\n      <span itemprop=\"datePublished\" content=\"2013-11-13T02:31:00+00:00\">2013.11.13 02:31</span>\n        ответ на <a href=\"#57c530\">#57c530</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>То-то и оно, что это не макросы получаются, а куда более контролируемая штука. И с кодогенерацией, по возможности, при определении, а не при специализации. Т.е. generic-код можно будет и динамически линковать.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"312424\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"312424\">Цитировать</a></p></div></div>\n","slug":"2013-11-rtti-in-static-html","comment_id":"312424","parent_id":"57c530"},{"content":"<div class=\"comment\" id=\"57c530\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://www.blogger.com/profile/15910217651901175618\" itemprop=\"url\" content=\"https://www.blogger.com/profile/15910217651901175618\"><span itemprop=\"name\">Юрий</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#57c530\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#57c530\">#57c530</a>\n      <span itemprop=\"datePublished\" content=\"2013-11-13T01:39:00+00:00\">2013.11.13 01:39</span>\n        ответ на <a href=\"#e6eadb\">#e6eadb</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Ну вот в C# (и вообще в языках для CLR) примитивные типы - частный случай типов-значений (value types), с методами и пропертями (но без возможности наследования, ес-сно).</p>\n\n<p>Но это, конечно, не для низкого уровня.</p>\n\n<p>Если говорить о дженерик-алгоритмах, то их, строго говоря, зачастую можно сделать, имея лишь указатели на функции. См. <code class=\"language-plaintext highlighter-rouge\">qsort</code> в стандартной библиотеке C.</p>\n\n<p>Но параметрический полиморфизм лучше, конечно. Причём если его делать без (а) боксинга, как в Java (тормоза) и (б) динамической генерации специализированного кода, как в .NET (ибо рантайм толстый), то остаются только макросы (типа шаблонов в C++ и D).</p>\n\n<p>Вообще, D тут образцовый вариант, т.к. в нём можно и функции вызывать как методы (unified function call syntax, UFCS), т.е. эмулировать методы на примитивных типах (в С# тоже можно, но с дженериками это не поможет).</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"57c530\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"57c530\">Цитировать</a></p></div></div>\n","slug":"2013-11-rtti-in-static-html","comment_id":"57c530","parent_id":"e6eadb"},{"content":"<div class=\"comment\" id=\"e6eadb\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#e6eadb\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#e6eadb\">#e6eadb</a>\n      <span itemprop=\"datePublished\" content=\"2013-11-11T22:15:00+00:00\">2013.11.11 22:15</span>\n        ответ на <a href=\"#e1c717\">#e1c717</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Я тут размышлял вот на какую тему — язык, который одновременно может использоваться как достаточно низкоуровневый,\n так и как полностью высокоуровневый. И тут возникает проблема — высшие типы (объекты, умные указатели и т.д.) и типы\n примитивные — это как бы принципиально разные сущности, тогда как я искал модель, где высшие типы плавно расширяют\n примитивы. Т.е. суть в том, чтобы иметь возможность с реальными примитивами работать как с классами, а не маяться\n боксингом (это штука неплохая, но я о другой задаче думал).</p>\n\n<p>В общем, это размышлизм об универсальном языке. С полиморфизмом уровня параметров…</p>\n\n<p>Например, чтобы один раз написанная функция <code class=\"language-plaintext highlighter-rouge\">sort</code> могла обрабатывать в т.ч. и массивы примитивных типов, лишь бы\n на типе был задан порядок.</p>\n\n<p>PS. Боксинг, в принципе, решает ту же задачу, но что-то мне кажется, вычислительный оверхед у него поболе будет.</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"e6eadb\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"e6eadb\">Цитировать</a></p></div></div>\n","slug":"2013-11-rtti-in-static-html","comment_id":"e6eadb","parent_id":"e1c717"},{"content":"<div class=\"comment\" id=\"e1c717\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://www.blogger.com/profile/15910217651901175618\" itemprop=\"url\" content=\"https://www.blogger.com/profile/15910217651901175618\"><span itemprop=\"name\">Юрий</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#e1c717\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#e1c717\">#e1c717</a>\n      <span itemprop=\"datePublished\" content=\"2013-11-11T21:47:00+00:00\">2013.11.11 21:47</span></span>\n  </h5>\n  <div class=\"comment-message\"><p>А в чём проблема? RTTI нужен только при передаче полиморфных параметров (в остальных случаях тип известен на этапе компиляции),\n а они всегда передаются по ссылке (либо это объект, либо boxed примитив). Ничто не мешает при выделении памяти под объект/боксинге\n положить туда ещё и указатель на дескриптор типа (всё равно там лежит ещё и длина области памяти, например).</p>\n\n<p>Т.е. выходит код типа</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> struct object_header{\n   size_t size;\n   type_t *rtti;\n   ... // тут может быть прочий хлам, счётчик ссылок, например.\n };\n \n object_t *new_object(type_t *type, ...){\n   struct object_header *ptr = malloc(type-&gt;getSize() + sizeof(struct object_header));\n   ptr-&gt;size = type-&gt;getSize();\n   ptr-&gt;rtti = type;\n   ...\n   return (object_t*)((intptr_t)ptr + sizeof(object_header));\n }\n</code></pre></div></div>\n\n<p>И всё. RTTI существует в единственном экземпляре для каждого типа, так что оверхед небольшой.</p>\n\n<p>RTTI не любят использовать, когда даже единственный экземпляр каждого типа стоит слишком дорого, но это же не твой сценарий.</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"e1c717\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"e1c717\">Цитировать</a></p></div></div>\n","slug":"2013-11-rtti-in-static-html","comment_id":"e1c717","parent_id":""},{"content":"<div class=\"comment\" id=\"e87b1f\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#e87b1f\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#e87b1f\">#e87b1f</a>\n      <span itemprop=\"datePublished\" content=\"2013-10-16T01:46:00+00:00\">2013.10.16 01:46</span>\n        ответ на <a href=\"#17506c\">#17506c</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>А как, не внося ограничений, устранить неопределенность? В общем, у меня есть большие подозрения, что после реализации всех фич языка оптимальность куда-то незаметно растворится. Хотя ХЗ, может, там есть какая-то глубокая мысль, которую я пропустил…</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"e87b1f\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"e87b1f\">Цитировать</a></p></div></div>\n","slug":"2013-10-eval-vs-exec-2-html","comment_id":"e87b1f","parent_id":"17506c"},{"content":"<div class=\"comment\" id=\"17506c\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://www.blogger.com/profile/15910217651901175618\" itemprop=\"url\" content=\"https://www.blogger.com/profile/15910217651901175618\"><span itemprop=\"name\">Юрий</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#17506c\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#17506c\">#17506c</a>\n      <span itemprop=\"datePublished\" content=\"2013-10-15T21:00:00+00:00\">2013.10.15 21:00</span>\n        ответ на <a href=\"#ecb2da\">#ecb2da</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Насколько я понимаю, специфичное представление чисел, строк и пр. — это оптимизация, а семантически они всё равно объекты. Т.е. интерпретатор загодя не знает, что у него будет — «объект вообще» или какой-то примитивный тип, и вынужден готовиться к худшему.</p>\n\n<p>Это плохо с точки зрения производительности.</p>\n\n<p>Презентация как раз о том, как можно эту неопределённость устранить по мере исполнения и делать меньше операций.</p>\n\n<p>Ограничения, я так понял, в самом RPython-е, а не в коде, который им парсят (по крайней мере, когда большая Ruby будет реализована). Ну и никто не мешает подобный фреймворк наваять на Ruby, просто на Python-е он уже написан =)</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"17506c\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"17506c\">Цитировать</a></p></div></div>\n","slug":"2013-10-eval-vs-exec-2-html","comment_id":"17506c","parent_id":"ecb2da"},{"content":"<div class=\"comment\" id=\"33c9a0\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#33c9a0\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#33c9a0\">#33c9a0</a>\n      <span itemprop=\"datePublished\" content=\"2013-10-09T06:46:00+00:00\">2013.10.09 06:46</span>\n        ответ на <a href=\"#74d2e8\">#74d2e8</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Ну, и вдобавок, я скептически смотрю на всё, что исходит от Питона. Сугубо эстетическая несовместимость у меня с ним.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"33c9a0\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"33c9a0\">Цитировать</a></p></div></div>\n","slug":"2013-10-eval-vs-exec-2-html","comment_id":"33c9a0","parent_id":"74d2e8"},{"content":"<div class=\"comment\" id=\"ecb2da\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#ecb2da\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#ecb2da\">#ecb2da</a>\n      <span itemprop=\"datePublished\" content=\"2013-10-09T06:43:00+00:00\">2013.10.09 06:43</span>\n        ответ на <a href=\"#74d2e8\">#74d2e8</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Насколько я понял, там накладываются дополнительные ограничения. Кроме того, у меня возникло ощущение, что с системой типов в Ruby автор несколько путается (там на самом деле числа, булевы и <code class=\"language-plaintext highlighter-rouge\">nil</code> представляются не как объекты)…</p>\n\n<p>Хотя, мб, я его просто недопонял. Презентация — не лучший формат для донесения сколь-либо сложных концепций.</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"ecb2da\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"ecb2da\">Цитировать</a></p></div></div>\n","slug":"2013-10-eval-vs-exec-2-html","comment_id":"ecb2da","parent_id":"74d2e8"},{"content":"<div class=\"comment\" id=\"74d2e8\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://www.blogger.com/profile/15910217651901175618\" itemprop=\"url\" content=\"https://www.blogger.com/profile/15910217651901175618\"><span itemprop=\"name\">Юрий</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#74d2e8\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#74d2e8\">#74d2e8</a>\n      <span itemprop=\"datePublished\" content=\"2013-10-09T06:30:00+00:00\">2013.10.09 06:30</span></span>\n  </h5>\n  <div class=\"comment-message\"><p>Вот эта презентация тебе может быть интересна <a href=\"https://speakerdeck.com/alex/why-ruby-isnt-slow\">https://speakerdeck.com/alex/why-ruby-isnt-slow</a>.</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"74d2e8\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"74d2e8\">Цитировать</a></p></div></div>\n","slug":"2013-10-eval-vs-exec-2-html","comment_id":"74d2e8","parent_id":""},{"content":"<div class=\"comment\" id=\"315da7\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#315da7\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#315da7\">#315da7</a>\n      <span itemprop=\"datePublished\" content=\"2011-10-12T16:50:00+00:00\">2011.10.12 16:50</span>\n        ответ на <a href=\"#088046\">#088046</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Я немного проапдейтил абзац про строки — там есть тонкости…</p>\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"315da7\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"315da7\">Цитировать</a></p></div></div>\n","slug":"2011-10-fpc-hello-world-html","comment_id":"315da7","parent_id":"088046"},{"content":"<div class=\"comment\" id=\"088046\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://www.blogger.com/profile/15910217651901175618\" itemprop=\"url\" content=\"https://www.blogger.com/profile/15910217651901175618\"><span itemprop=\"name\">Юрий</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#088046\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#088046\">#088046</a>\n      <span itemprop=\"datePublished\" content=\"2011-10-12T16:12:00+00:00\">2011.10.12 16:12</span>\n        ответ на <a href=\"#99563b\">#99563b</a></span>\n  </h5>\n  <div class=\"comment-message\"><blockquote>\n  <p>То, что вместо функции оператор — это другой вопрос.</p>\n</blockquote>\n\n<p>ОК, сформулирую иначе: невозможно написать то, что принято называть \"стандартной библиотекой языка Pascal\" (включая read/readln/write/writeln) на языке Pascal.</p>\n\n<blockquote>\n  <p>на самом деле <code class=\"language-plaintext highlighter-rouge\">WriteLn()</code> — это переменное число вызовов</p>\n</blockquote>\n\n<p>Я когда-то крякал программы на TurboPascal-е, сталкивался =)</p>\n\n<blockquote>\n  <p>А константа, полученная из литералов сложением, будет описана как <code class=\"language-plaintext highlighter-rouge\">AnsiString</code>.</p>\n</blockquote>\n\n<p>Хорошо, спасибо.</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"088046\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"088046\">Цитировать</a></p></div></div>\n","slug":"2011-10-fpc-hello-world-html","comment_id":"088046","parent_id":"99563b"},{"content":"<div class=\"comment\" id=\"99563b\" itemscope itemtype=\"http://schema.org/Comment\">\n  <h5 class=\"comment-title\">\n    <span class=\"comment-author\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\"><a href=\"https://shikhalev.org\" itemprop=\"url\" content=\"https://shikhalev.org\"><span itemprop=\"name\">Иван Шихалев</span></a></span>\n    <span class=\"comment-meta\">\n      <a href=\"#99563b\" itemprop=\"url\" content=\"https://shikhalev.github.io/admin/last-comments.json#99563b\">#99563b</a>\n      <span itemprop=\"datePublished\" content=\"2011-10-12T06:41:00+00:00\">2011.10.12 06:41</span>\n        ответ на <a href=\"#58d68a\">#58d68a</a></span>\n  </h5>\n  <div class=\"comment-message\"><p>Так и FPC прекрасно бутстрапится. То, что вместо функции оператор — это другой вопрос. Ну и переменное число аргументов тут не поможет. На «Hello, World!» этого не заметно, но на самом деле <code class=\"language-plaintext highlighter-rouge\">WriteLn()</code> — это переменное число вызовов, т.е. внутренние <code class=\"language-plaintext highlighter-rouge\">fpc_write_нечто()</code> вызываются для каждого аргумента (и зависят от его типа).</p>\n\n<p>Строковый литерал больше 255 символов просто не скомпилируется, зачем что-то обрезать? А константа, полученная из литералов сложением, будет описана как <code class=\"language-plaintext highlighter-rouge\">AnsiString</code>.</p>\n\n</div>\n  <div class=\"comment-actions-wrapper\"><p class=\"comment-actions\"><a style=\"cursor: pointer;\" data-action=\"answer\" data-comment=\"99563b\">Ответить</a> |\n                             <a style=\"cursor: pointer;\" data-action=\"cite\" data-comment=\"99563b\">Цитировать</a></p></div></div>\n","slug":"2011-10-fpc-hello-world-html","comment_id":"99563b","parent_id":"58d68a"}]
